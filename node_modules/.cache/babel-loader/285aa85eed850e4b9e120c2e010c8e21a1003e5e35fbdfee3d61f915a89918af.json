{"ast":null,"code":"import React,{useState,useEffect,useContext}from'react';import{useInView}from'react-intersection-observer';import'./PowerMeter.css';import{NightModeContext}from'../contexts/NightModeContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const PowerMeter=_ref=>{let{title,level}=_ref;const maxLevel=6;const[currentLevel,setCurrentLevel]=useState(0);const{ref,inView}=useInView({triggerOnce:true});const{isNightMode}=useContext(NightModeContext);useEffect(()=>{let interval;if(inView&&currentLevel<level){interval=setInterval(()=>{setCurrentLevel(prev=>prev+1);},250);}return()=>clearInterval(interval);},[inView,currentLevel,level]);return/*#__PURE__*/_jsxs(\"div\",{className:\"power-meter \".concat(isNightMode?'night-mode':''),ref:ref,children:[/*#__PURE__*/_jsx(\"h3\",{children:title}),/*#__PURE__*/_jsx(\"div\",{className:\"meter\",children:[...Array(maxLevel)].map((_,i)=>/*#__PURE__*/_jsx(\"div\",{className:\"square \".concat(i<currentLevel?'filled':'',\" \").concat(i===level-1&&currentLevel===level?'blinking':'',\" \").concat(isNightMode?'night-mode':'')},i))})]});};const PowerMeterList=()=>{const meters=[{title:'HTML',level:6},{title:'CSS',level:6},{title:'JS(ES6)',level:6},{title:'PHP',level:5},{title:'PYTHON',level:4},{title:'NODE',level:4},{title:'C++',level:4},{title:'JAVA',level:4}];return/*#__PURE__*/_jsx(\"div\",{className:\"power-meter-list\",children:meters.map((meter,index)=>/*#__PURE__*/_jsx(PowerMeter,{title:meter.title,level:meter.level},index))});};export default PowerMeterList;","map":{"version":3,"names":["React","useState","useEffect","useContext","useInView","NightModeContext","jsx","_jsx","jsxs","_jsxs","PowerMeter","_ref","title","level","maxLevel","currentLevel","setCurrentLevel","ref","inView","triggerOnce","isNightMode","interval","setInterval","prev","clearInterval","className","concat","children","Array","map","_","i","PowerMeterList","meters","meter","index"],"sources":["/home/hshot0/linha/src/components/PowerMeter.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useInView } from 'react-intersection-observer';\nimport './PowerMeter.css';\nimport { NightModeContext } from '../contexts/NightModeContext';\n\nconst PowerMeter = ({ title, level }) => {\n  const maxLevel = 6; \n  const [currentLevel, setCurrentLevel] = useState(0);\n  const { ref, inView } = useInView({ triggerOnce: true });\n  const { isNightMode } = useContext(NightModeContext);\n\n  useEffect(() => {\n    let interval;\n    if (inView && currentLevel < level) {\n      interval = setInterval(() => {\n        setCurrentLevel((prev) => prev + 1);\n      }, 250);\n    }\n    return () => clearInterval(interval);\n  }, [inView, currentLevel, level]);\n\n  return (\n    <div className={`power-meter ${isNightMode ? 'night-mode' : ''}`} ref={ref}>\n      <h3>{title}</h3>\n      <div className=\"meter\">\n        {[...Array(maxLevel)].map((_, i) => (\n          <div\n            key={i}\n            className={`square ${i < currentLevel ? 'filled' : ''} ${i === level - 1 && currentLevel === level ? 'blinking' : ''} ${isNightMode ? 'night-mode' : ''}`}\n          ></div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nconst PowerMeterList = () => {\n  const meters = [\n    { title: 'HTML', level: 6 },\n    { title: 'CSS', level: 6 },\n    { title: 'JS(ES6)', level: 6 },\n    { title: 'PHP', level: 5 },\n    { title: 'PYTHON', level: 4 },\n    { title: 'NODE', level: 4 },\n    { title: 'C++', level: 4 },\n    { title: 'JAVA', level: 4 } \n  ];\n\n  return (\n    <div className=\"power-meter-list\">\n      {meters.map((meter, index) => (\n        <PowerMeter key={index} title={meter.title} level={meter.level} />\n      ))}\n    </div>\n  );\n};\n\nexport default PowerMeterList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}