{"ast":null,"code":"var _jsxFileName = \"/home/hshot0/linha/src/components/LanguageSelection.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport brazilFlag from '../assets/brazil.png';\nimport ukFlag from '../assets/uk.png';\nimport { LanguageContext } from '../contexts/LanguageContext';\nimport { NightModeContext } from '../contexts/NightModeContext';\nimport { FaMoon, FaSun } from 'react-icons/fa';\nimport './LanguageSelection.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LanguageSelection = () => {\n  _s();\n  const [displayedMessage, setDisplayedMessage] = useState('');\n  const [showButtons, setShowButtons] = useState(false);\n  const {\n    changeLanguage\n  } = useContext(LanguageContext);\n  const {\n    isNightMode,\n    toggleNightMode\n  } = useContext(NightModeContext);\n  const navigate = useNavigate();\n  const message = \"Please select your language:\";\n  useEffect(() => {\n    let charIndex = 0;\n    let timeoutId;\n    const typeMessage = () => {\n      if (charIndex < message.length) {\n        setDisplayedMessage(message.substring(0, charIndex + 1));\n        charIndex++;\n        timeoutId = setTimeout(typeMessage, 100);\n      } else {\n        timeoutId = setTimeout(() => {\n          setShowButtons(true);\n        }, 500);\n      }\n    };\n    typeMessage();\n    return () => clearTimeout(timeoutId);\n  }, [message]);\n  const handleLanguageChange = lang => {\n    changeLanguage(lang);\n    navigate('/main');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `language-selection ${isNightMode ? 'night-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [displayedMessage, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"blinking-cursor\",\n        children: \"|\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 28\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), showButtons && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flags-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: brazilFlag,\n          alt: \"Brazilian Flag\",\n          className: \"flag\",\n          onClick: () => handleLanguageChange('pt')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: ukFlag,\n          alt: \"UK Flag\",\n          className: \"flag\",\n          onClick: () => handleLanguageChange('en')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-mode-button\",\n        onClick: toggleNightMode,\n        children: isNightMode ? /*#__PURE__*/_jsxDEV(FaSun, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 28\n        }, this) : /*#__PURE__*/_jsxDEV(FaMoon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 40\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageSelection, \"5EtGHuI2vf6bd63byP6PkGR/674=\", false, function () {\n  return [useNavigate];\n});\n_c = LanguageSelection;\nexport default LanguageSelection;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelection\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","brazilFlag","ukFlag","LanguageContext","NightModeContext","FaMoon","FaSun","jsxDEV","_jsxDEV","LanguageSelection","_s","displayedMessage","setDisplayedMessage","showButtons","setShowButtons","changeLanguage","isNightMode","toggleNightMode","navigate","message","charIndex","timeoutId","typeMessage","length","substring","setTimeout","clearTimeout","handleLanguageChange","lang","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/home/hshot0/linha/src/components/LanguageSelection.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport brazilFlag from '../assets/brazil.png';\nimport ukFlag from '../assets/uk.png';\nimport { LanguageContext } from '../contexts/LanguageContext';\nimport { NightModeContext } from '../contexts/NightModeContext';\nimport { FaMoon, FaSun } from 'react-icons/fa';\nimport './LanguageSelection.css';\n\nconst LanguageSelection = () => {\n  const [displayedMessage, setDisplayedMessage] = useState('');\n  const [showButtons, setShowButtons] = useState(false);\n  const { changeLanguage } = useContext(LanguageContext);\n  const { isNightMode, toggleNightMode } = useContext(NightModeContext);\n  const navigate = useNavigate();\n\n  const message = \"Please select your language:\";\n\n  useEffect(() => {\n    let charIndex = 0;\n    let timeoutId;\n    const typeMessage = () => {\n      if (charIndex < message.length) {\n        setDisplayedMessage(message.substring(0, charIndex + 1));\n        charIndex++;\n        timeoutId = setTimeout(typeMessage, 100);\n      } else {\n        timeoutId = setTimeout(() => {\n          setShowButtons(true);\n        }, 500);\n      }\n    };\n\n    typeMessage();\n\n    return () => clearTimeout(timeoutId);\n  }, [message]);\n\n  const handleLanguageChange = (lang) => {\n    changeLanguage(lang);\n    navigate('/main');\n  };\n\n  return (\n    <div className={`language-selection ${isNightMode ? 'night-mode' : ''}`}>\n      <p>{displayedMessage}<span className=\"blinking-cursor\">|</span></p>\n      {showButtons && (\n        <div className=\"button-container\">\n          <div className=\"flags-container\">\n            <img\n              src={brazilFlag}\n              alt=\"Brazilian Flag\"\n              className=\"flag\"\n              onClick={() => handleLanguageChange('pt')}\n            />\n            <img\n              src={ukFlag}\n              alt=\"UK Flag\"\n              className=\"flag\"\n              onClick={() => handleLanguageChange('en')}\n            />\n          </div>\n          <button className=\"toggle-mode-button\" onClick={toggleNightMode}>\n            {isNightMode ? <FaSun /> : <FaMoon />}\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default LanguageSelection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}